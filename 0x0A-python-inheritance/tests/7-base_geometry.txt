The ``7-base_geometry`` module
======================

Using ``base_geometry``
-------------------

Importing the function from the module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Handling value of int type:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", 12)

Handling negative integers:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", -12)
	 Traceback (most recent call last):
	 ...
	 ValueError: my_int must be greater than 0
	 
Handling 0 value:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", 0)
	 Traceback (most recent call last):
	 ...
	 ValueError: my_int must be greater than 0
	 
Handling NaN value:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", NaN)
	 Traceback (most recent call last):
	 ...
	 NameError: name 'NaN' is not defined
	 
Handling a non-integer:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", "str")
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer

	 >>> bg.integer_validator("my_int", True)
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer

	 >>> bg.integer_validator("my_int", 3.7)
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
	 >>> bg.integer_validator("my_int", (1, 2))
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
	 >>> bg.integer_validator("my_int", {3, 4})
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
	 >>> bg.integer_validator("my_int", None)
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
	 >>> bg.integer_validator("my_int", [3])
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
Handling None object:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", None)
	 Traceback (most recent call last):
	 ...
	 TypeError: my_int must be an integer
	 
Handling None:
	 >>> bg = BaseGeometry(None)
	 Traceback (most recent call last):
	 ...
	 TypeError: BaseGeometry() takes no arguments

Handling only 1 arg:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int")
	 Traceback (most recent call last):
	 ...
	 TypeError: integer_validator() missing 1 required positional argument: 'value'
	 
Handling zero arg:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator()
	 Traceback (most recent call last):
	 ...
	 TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
	 
Handling more than two args:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator("my_int", None, 1)
	 Traceback (most recent call last):
	 ...
	 TypeError: integer_validator() takes 3 positional arguments but 4 were given

Handling a name that is not a string:
	 >>> bg = BaseGeometry()

	 >>> bg.integer_validator(2, 3)
	 
