The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Handling positive integers:
	 >>> add_integer(3, 4)
	 7

Handling negative integers:
	 >>> add_integer(-3, -4)
	 -7

Handling negative and positive integers:
	 >>> add_integer(-5, 8)
	 3

Handling floats:
	 >>> add_integer(1.2, 4.7)
	 5

Handling int and float:
	 >>> add_integer(3, 7.1)
	 10

Checking for passed NaN:
	 >>> add_integer(1, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Checking for passed inf:
	 >>> add_integer(1, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: cannot convert float infinity to integer

Checking super long int:
	 >>> add_integer(999999999999999999999999999999, 1)
	 1000000000000000000000000000000

Handling a string first arg:
	 >>> add_integer("a", 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Handling a string second arg:
	 >>> add_integer(4, "b")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Handling a string for first and second arg:
	 >>> add_integer("a", "b")
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer
